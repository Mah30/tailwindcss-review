🧩 Em Tailwind CSS, a diferença entre p e px:

| Classe | Significa                      | Aplica onde?                |
| ------ | ------------------------------ | --------------------------- |
| `p-4`  | **Padding em todos os lados**  | top, right, bottom, left    |
| `px-4` | **Padding no eixo horizontal** | apenas **left** e **right** |
| `py-4` | **Padding no eixo vertical**   | apenas **top** e **bottom** |
| `pt-4` | **Padding top**                | apenas em cima              |
| `pb-4` | **Padding bottom**             | apenas embaixo              |
| `pl-4` | **Padding left**               | apenas à esquerda           |
| `pr-4` | **Padding right**              | apenas à direita            |



🧠 Dica de memorização:

| Letra | Significado | Dica             |
| ----- | ----------- | ---------------- |
| `p`   | padding     | todos os lados   |
| `x`   | eixo X      | horizontal (← →) |
| `y`   | eixo Y      | vertical (↑ ↓)   |
| `t`   | top         | cima             |
| `b`   | bottom      | baixo            |
| `l`   | left        | esquerda         |
| `r`   | right       | direita          |



📌 Diferença entre px-4 e pl-4/pr-4:

px-4 → aplica 4 unidades de padding nos dois lados horizontais (esquerda e direita)

pl-4 → aplica 4 unidades só na esquerda

pr-4 → aplica 4 unidades só na direita



🔁 Ou seja:

| Classe Tailwind | Onde aplica?                     |
| --------------- | -------------------------------- |
| `px-4`          | `padding-left` + `padding-right` |
| `py-4`          | `padding-top` + `padding-bottom` |
| `pl-4`          | `padding-left` apenas            |
| `pr-4`          | `padding-right` apenas           |



📱 Tabela dos Breakpoints do Tailwind (versões padrão):
| Prefixo | Tamanho mínimo | Uso típico em                   | Exemplo de uso                   |
| ------- | -------------- | ------------------------------- | -------------------------------- |
| `sm`    | **640px**      | Celular grande / Tablet pequeno | `sm:bg-red-500`, `sm:rounded-xl` |
| `md`    | **768px**      | Tablet / Tablet horizontal      | `md:text-lg`                     |
| `lg`    | **1024px**     | Laptop médio                    | `lg:p-8`                         |
| `xl`    | **1280px**     | Desktop grande                  | `xl:grid-cols-4`                 |
| `2xl`   | **1536px**     | Telas grandes mesmo             | `2xl:container`                  |
🧠 A regra é: "a partir de tal tamanho, aplique esta classe".


🧩 Tabela das variações rounded-* disponíveis:

| Classe Tailwind | `border-radius` aplicada                        |
| --------------- | ----------------------------------------------- |
| `rounded-none`  | `0px`                                           |
| `rounded-sm`    | `2px`                                           |
| `rounded`       | `4px` (padrão)                                  |
| `rounded-md`    | `6px`                                           |
| `rounded-lg`    | `8px`                                           |
| `rounded-xl`    | `12px`                                          |
| `rounded-2xl`   | `16px`                                          |
| `rounded-3xl`   | `24px`                                          |
| `rounded-full`  | `9999px` (totalmente arredondado, tipo círculo) |


Funciona assim:

rounded: padrão (para mobile)

sm:rounded-lg: aplica a partir de 640px

xl:rounded-xl: aplica a partir de 1280px


✅ O que significa “mobile first” no Tailwind?
As classes SEM prefixo (p-4, text-lg, rounded) são aplicadas em todos os tamanhos de tela, inclusive mobile.
As classes COM prefixo (sm:, md:, lg:, etc.) sobrescrevem essas classes a partir de certos tamanhos maiores.


🎯 Dica de ouro:
💬 Sem prefixo = mobile
📐 Com prefixo = tela maior que mobile


EXEMPLO: 
<div className="text-sm sm:text-base md:text-lg lg:text-xl">
  Texto responsivo
</div>
em: <p className="text-sm">...</p>
Você não está usando um breakpoint, mas sim escolhendo um tamanho de fonte fixo.(que será menor, apropriado já para o mobile. Pois o tailwind já é apropriado para mobile)

🔁 Então atenção:

| Isso aqui... | NÃO é um breakpoint                   |
| ------------ | ------------------------------------- |
| `text-sm`    | Tamanho da fonte                      |
| `sm:text-sm` | Tamanho da fonte **em telas ≥ 640px** |


🧩 Comparando os dois:

<!-- Aplica fonte pequena em todas as telas -->
<p className="text-sm">Fonte pequena</p>

<!-- Aplica fonte pequena SOMENTE em telas ≥ 640px -->
<p className="sm:text-sm">Fonte pequena no tablet pra cima</p>


✅ text-sm no Tailwind = tamanho da fonte

| Classe Tailwind  | Significado                      | Tamanho em `rem` (padrão) |
| ---------------- | -------------------------------- | ------------------------- |
| `text-xs`        | Fonte **extra pequena**          | `0.75rem` = 12px          |
| `text-sm`        | Fonte **pequena**                | `0.875rem` = 14px         |
| `text-base`      | Fonte **normal** (padrão)        | `1rem` = 16px             |
| `text-lg`        | Fonte **um pouco maior**         | `1.125rem` = 18px         |
| `text-xl`        | Fonte grande                     | `1.25rem` = 20px          |
| `text-2xl`, etc. | Fontes maiores ainda (até `9xl`) | Vai até **`6rem` = 96px** |


✅ Dica final:
| Classe que começa com text- | Refere-se ao tamanho da fonte |
| Prefixo como sm: | É um breakpoint responsivo |


EXEMPLO
<div class="p-8">
  <div class="hidden sm:block bg-green-300 p-4 rounded">
    ✅ Só aparece em telas maiores que 640px (tablet ou desktop)
  </div>

  <div class="block sm:hidden bg-red-300 p-4 rounded mt-4">
    📱 Só aparece em telas menores que 640px (mobile)
  </div>
</div>

✅ O que esperar:

| Tamanho da tela   | Verde (`sm:block`) | Vermelho (`sm:hidden`) |
| ----------------- | ------------------ | ---------------------- |
| Mobile (< 640px)  | ❌ Escondido        | ✅ Visível              |
| Tablet+ (≥ 640px) | ✅ Visível          | ❌ Escondido            |


🔍 Primeira div:

<div class="hidden sm:block bg-green-300 p-4 rounded">
  ✅ Só aparece em telas maiores que 640px (tablet ou desktop)
</div>

🧠 Tradução:
hidden → Esconde o elemento (display: none) em todos os tamanhos, por padrão.

sm:block → A partir de telas ≥ 640px, muda para display: block, ou seja, mostra como um bloco visível.

bg-green-300 → Aplica fundo verde claro.

p-4 → Aplica padding (espaçamento interno) de 1rem (16px) em todos os lados.

rounded → Aplica bordas levemente arredondadas (padrão do Tailwind: 4px).

✅ Resumo:

“Esconda o conteúdo em telas pequenas. Mostre ele como um bloco verde com espaçamento e borda arredondada em telas maiores.”


❓ O que é block?
display: block = o elemento ocupa uma linha inteira na tela.
É como um parágrafo (<p>), uma div, ou section.

| display        | Comportamento                             |
| -------------- | ----------------------------------------- |
| `block`        | Ocupa **100% da largura disponível**      |
| `inline`       | Fica na mesma linha que outros            |
| `inline-block` | Fica na linha, mas permite altura/largura |


🔍 Segunda div:

<div class="block sm:hidden bg-red-300 p-4 rounded mt-4">
  📱 Só aparece em telas menores que 640px (mobile)
</div>

🧠 Tradução:
block → Mostra como um bloco por padrão (ou seja, visível no mobile).

sm:hidden → A partir de 640px, esconda o elemento (display: none).

bg-red-300 → Fundo vermelho claro.

p-4 → Padding (espaço interno).

rounded → Bordas arredondadas.

mt-4 → Margin top de 1rem (espaço acima do elemento).


✅ Resumo:

“Mostre este bloco vermelho em telas pequenas (mobile), mas esconda ele a partir do tablet.”


📊 Tabela de leitura:

| Classe      | Significa...                   |
| ----------- | ------------------------------ |
| `hidden`    | Escondido (display: none)      |
| `block`     | Visível, ocupando toda a linha |
| `sm:block`  | Fica `block` a partir de 640px |
| `sm:hidden` | Esconde a partir de 640px      |



✅ Explicando

| Parte                         | Função                                                               |
| ----------------------------- | -------------------------------------------------------------------- |
| `useEffect()`                 | Detecta o tema ao carregar ou navegar na SPA                         |
| `setIsDark()`                 | Atualiza o estado para refletir o modo atual                         |
| `localStorage.setItem()`      | Salva a escolha do usuário localmente (persistente)                  |
| `document.documentElement...` | Aplica a classe `.dark` ao `<html>` dinamicamente                    |
| `MoonIcon` / `SunIcon`        | Mostram apenas o ícone correspondente ao estado atual (`dark:block`) |
